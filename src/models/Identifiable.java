package models;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.Random;

/**
 * This is an abstract class used by classes which implement the {@code ID} property
 * 
 * <p> Implementing this abstract class will allow others to identify objects of a class using their {@code ID}
 * 
 * <p> It is recommended to generate the {@code ID} property randomly.
 * This generation is implemented differently in each class, however a good method would be
 * to generate this value based on the object's class name and it's other properties
 * 
 * <p> <i>Created on 14/05/2023 by Muhammad Putra</i>
 * 
 * @author		Muhammad Putra
 * @version		1.8
 * @since		1.0
 */
public abstract class Identifiable implements Serializable {


	
/* --------------------------- Private Attributes --------------------------- */
//region

	protected String id;

//endregion



/* --------------------------- Getters and Setters -------------------------- */
//region

	/** 
	 * Returns the autogenerated ID for this object
	 * 
	 * @return String		- the object's id
	 */
	public String getId() {
		return id;
	}

//endregion



/* ----------------------------- Utility Methods ---------------------------- */
//region

	/** 
	 * Returns this object as a string representation
	 * 
	 * <p> This method formats the properties in the following way:
	 * <p> {@code ID: <id>}
	 */	
	@Override
	public String toString() {
		return String.format("ID: %s", this.id);
	}

	/** 
	 * Generates an ID for this service
	 * 
	 * <p> This is calculated by doing the following:
	 * <ol>
	 * 		<li> Get the class name of the object
	 * 		<li> Fetch the current system datetime
	 * 		<li> Generate a random 4 digit number
	 * 		<li> Concatenate these two numbers together
	 * 		<li> Set the new id as this concatenation
	 * </ol>
	 * 
	 * <p> <b>NOTE</b>: this method should only be called from within the constructor.
	 * Usage outside may break certain features!
	 */	
	public void generateId() {

		//	Get the class name
		String className = this.getClass().getSimpleName();

		//	Fetch the current system datetime and concatenate it into a single string
		LocalDateTime currentDateTime = LocalDateTime.now();
		int year = currentDateTime.getYear();
		int month = currentDateTime.getMonthValue();
		int day = currentDateTime.getDayOfMonth();
		int hour = currentDateTime.getHour();
		int minute = currentDateTime.getMinute();
		int second = currentDateTime.getSecond();

		//	Generate a random 4 digit number
		Random rand = new Random();
		int randInt = rand.nextInt(0, 9999);

		//	Concatenate the datetime and random number together
		String idConcat = String.format("%s%04d%02d%02d%02d%02d%02d%04d", className, year, month, day, hour, minute, second, randInt);

		//	Set the new ID
		this.id = idConcat;

	}

//endregion



}
